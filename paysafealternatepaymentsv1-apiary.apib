RenFORMAT: 1A
HOST: http://paysafe.api.com/alternatepayments/v1/

# Paysafe Alternate Payments API

The Paysafe Alternate Payments API allows you to collect payments from your customers using a
variety of methods.

The API in SAQ (TBD) compliant.

Request and response payloads are formatted as JSON.

# Release Notes

|Version   |Date            |Details|
|---       |---             |---|
|1.3.X     |March 14 2015   |<ul><li>Added support for Ideal</li></ul>|
|1.3.X     |March 22 2015   |<ul><li>Added support for China Union Pay</li></ul>|
|1.3.X     |March XX 2015   |<ul><li>Added support for Sofort</li></ul>|

# Technical introduction
This section provides a technical introduction to the Paysafe Alternate Payments API. 

## API Endpoints

The Paysafe Alternate Paymenes API is available in the sandbox environment for integration testing purposes. 
To switch between the sandbox and the live production system you only need to change the endpoint URI and the 
credentials.

The following endpoints form the basis of a resource URI:

    Sandbox (Testing) endpoint - https://api.test.paysafe.com/alternatepayments/v1/

    Production endpoint - https://api.paysafe.com/alternatepayments/v1/

As the sandbox environment is completely isolated, any changes you perform on your sandbox accounts configuration
(such as secure IP registration, APP registration) may have to be repeated in your production account.

## Pagination

API calls that return multiple resources will wrap the response as a named JSON array.  For example a collection of 'auth' objects would
be returned as 'auths'. By default, 10 items will be returned at a time and you can navigate to the next set of resources using the 
supplied HATEOAS links.  List responses will also include a meta data section that will identify the number of records included in the collection,
the number of records per page (limit) and current page number.
<br/><br/>
For example, if a request to look up subscriptions identifies that there are 134 subscriptions and you have set your limit to 15, the first 15 items will be returned with navigation links to the next 15 items in the list \(items 16-30\). If you navigate to the next page using the provided HATEOAS link, you will now retrieve items 16-30 with a new navigation link provided to return to the previous page, as well as a link to continue to the next page of items._

> _You can change the default list page size by defining a **limit** parameter value._

|Parameter Name |Description|
|---            |---|
|limit          |The number of records to be returned per page. Default = 10, Max = 100|
|offset         |Identifies your location within the list and allows you to fetch the next set of resources|
|startDate      |This is the start date in UTC. Default value is 30 days before the endDate.|
|endDate        |This is the end date in UTC. Default value is the current date and time.|

Sample Response with List Data

```apib
{
    "meta": {
        "numberOfRecords": 77,
        "limit": 10,
        "page": 2
    },
    "plans": [
        {
            "planId": "MONTHLYGREENPLAN",
            "planName": "Sample Premier Monthly Membership",
            "interval": 3,
            "intervalType": "monthly",
            "intervalCount": 4,
            "amount": 2995,
            "currency": "EUR",
            "status": "active"
        },
        {
            ...
        },
        {
            ...
        },
        
    ],
    "links": [
        {
            "url": "https://api.neteller.com/v1/plans?sessionid=234243242&limit=10&offset=10",
            "rel": "self",
            "method": "GET"
        },
        {
            "url": "https://api.neteller.com/v1/plans?sessionid=234243242&limit=10&offset=0",
            "rel": "prev",
            "method": "GET"
        },
        {
            "url": "https://api.neteller.com/v1/plans?sessionid=234243242&limit=10&offset=20",
            "rel": "next",
            "method": "GET"
        }
    ]
}
```

## HTTP Responses

HTTP response codes are used to indicate the status of a request.To ease integration and support for developers 
integrating to our APIs, the error messages that are returned should be verbose enough to correct the problem.  
The error structure contains a 4–5 digit code as well as a human readable message. Additionally, the application 
error code will be returned in the header so it can be easily used by an application without parsing the body.

**HTTP Status Code Summary**

|HTTP Response Code Category|Description|
|---|---|
|1xx: Informational|Communicates transfer protocol–level information|
|2xx: Success|Indicates that the client’s request was accepted|
|3xx: Redirection|Indicates that the client must take some additional action in order to complete the request|
|4xx: Client Error|Indicates that the client has made an error with the request|
|5xx: Server Error|Indicates that an error occurred on the server side|

**Common HTTP Response Status Codes**

|HTTP Status Code|Description|
|---|---|
|200 OK|Everything worked as expected|
|201 CREATED|The request was successful. NETBANX created a new resource and the response body contains the representation|
|202 ACCEPTED|This indicates that the client’s request will be handled asynchronously. It tells the client that the request appears valid, but it still may have problems once it is processed|
|204 NO CONTENT|This is usually returned in response to a PUT, POST, or DELETE request, when the REST API declines to send back any status message or representation in the body of the response message|
|304 NOT MODIFIED|The client's cached version of the representation is still up to date|
|400 BAD REQUEST|This often indicates that a required parameter is missing or that a parameter is invalid. This is a generic client-side error status, used when no other 4xx error code is appropriate|
|401 UNAUTHORIZED|This indicates that the client tried to operate on a protected resource without providing the proper authorization. They may have provided the wrong credentials or none at all|
|402 PAYMENT REQUIRED|The parameters were valid but the request failed|
|404 NOT FOUND|The requested resource does not exist|
|405 METHOD NOT ALLOWED|The client tried to POST or PUT to a resource that would not accept it|
|415 UNSUPPORTED MEDIA TYPE|The request is in a format not supported by the requested resource for the requested method|
|429 TOO MANY REQUESTS|The application is sending too many simultaneous requests|
|500 INTERNAL SERVER ERROR|An error occurred with an internal server|
|502 EXTERNAL SERVER ERROR|We received an invalid response from the upstream gateway in attempting to fulfill the request|

**Error Attributes**

|Element|Type|Description|
|---|---|---|
|Element|Type|Description|
|code|String|This is the error code|
|message|String|This is a description of the error|
|details|Array|This is a detailed description|
|fieldErrors|Array|This is a list of fields that have problems|

**Error message example with details**

```apib
    {
        "error": {
            "code": "5023",
            "message": "Bad request",
            "details": [
                "Illegal unquoted character ((CTRL-CHAR, code 10)): has to be escaped using backslash to be included in string value at  [line: 2, column: 61]"
            ]
        }
    }
```
 
 
**Error message example with field errors**

```apib
    {
       "error":{
          "code":5068,
          "message":"Field Error(s)",
          "fieldErrors":[
             {
                "field":"recipientEmail",
                "error":"john@hi@you.c.c.c.c is not a valid e-mail address."
             },
             {
                "field":"transaction.amount",
                "error":"A transaction amount is required."
             },
             {
                "field":"transaction.currency",
                "error":"Currency with value [USD] exceeds the maximum size of [3]."
             }
          ],
          "details":[
               "There are invalid or missing fields in your request."
            ]
       }
    }
```

### HATEOAS

The Alternate Payments API uses a RESTful endpoint structure and relies on HTTP verbs (GET, PUT, POST, DELETE)
to determine what action you are attempting to perform on a specific resource.

Each API call response includes an array of HATEOAS (Hypermedia as the Engine of Application State) links. 
These links can be used to integrate subsequent flows and typically they will provide you information as to
what you can do next.

By using these links, you no longer need to hardcode your integration to call specific endpoint urls to utilize
our API, but rather can use the returned url for the specific purpose as defined by the 'rel' definition.

#### HATEOAS Link Structure

|Element  |Description|
|---      |---|
|rel      |Link relation that describes how this link relates to the previous call. Examples include self (get details of the current call), parent_payment (get details of the parent payment), or a related call such as execute or refund.|
|href     |URL of the related HATEOAS link you can use for subsequent calls.|


Eg. Below are sample HATEOAS links from a API rsponse that returns a collection of auths. Links
are provided to navigate through the set of resources in the collection.
```
"links": [{
    "url": "https://api.paysafe.com/v1/auths/234243242?limit=10&offset=10",
    "rel": "self",
    "method": "GET"
},  {
    "url": "https://api.paysafe.com/v1/auths/234243242?limit=10&offset=0",
    "rel": "prev",
    "method": "GET"
}, {
    "url": "https://api.paysafe.com/v1/auths/234243242?limit=10&offset=20",
    "rel": "next",
    "method": "GET"
}]

```

### Error Codes

These are the error codes common to all subsystems

|HTTP Status   |Code     |Message                                 |Description|
|---           |---      |---                                     |---|
|400           |5001     |Invalid currency                        |The submitted currency code is invalid or your account does not support this currency.|
|              |5010     |Invalid country                         |The submitted country code is invalid.|
|              |5016     |Account not found                       |The account you provided cannot be found.|
|              |5017     |Account disabled                        |The account you provided is disabled.|
|              |5023     |Bad request                             |The request is not parseable.|
|              |5042     |Invalid merchant reference              |This error usually indicates that a transaction was attempted with the merchant reference field missing. This value is mandatory and must be included with your request.|
|              |5068     |Invalid field                           |Either you submitted a request that is missing a mandatory  field or the value of a field does not match the format expected.|
|401           |5275     |Authentication credentials expired      |The authentication credentials provided with the request have expired.|
|              |5276     |Authentication credentials disabled     |The authentication credentials provided with the request provided have been disabled.|
|              |5277     |Authentication credentials locked       |The authentication credentials provided with the request have been locked due to multiple authentication failures.|
|              |5278     |Cannot authenticate                     |The authentication credentials provided with the request were not accepted for an unknown reason.| 
|              |5279     |Authentication credentials are invalid  |The authentication credentials are invalid.|
|              |5280     |Authentication credentials not provided |The required authentication credentials were not provided.|
|403           |5270     |Unauthorized access                     |The credentials provided with the request do not have permission to access the requested data.|
|404           |5269     |Entity not found                        |The ID\(s\) specified in the URL do not correspond to the values in the system.|
|              |5273     |URI not found                           |Your client reached our application but we were unable to service your request due to an invalid URL.|
|405           |5281     |Method not supported                    |The request uses an action (e.g., GET, POST, or PUT) that is not supported by the resource.|
|406           |5271     |Unsupported 'Accept' header             |You requested a response in the 'Accept' header that is in an unsupported format.|
|415           |5272     |Unsupported 'Content-Type'              |The 'Content-Type' you specified in request header was submitted in an unsupported format.|
|429           |1200     |API call rate exceeded                  |The API call has been denied as it has exceeded the permissible call rate limit.|
|500           |1000     |Internal error                          |An internal error occurred.|
|              |1001     |Activity Timed Out                      |Your request timed out before it could be completed.  If you receive this error, it is still possible that your request will be successfully processed and you should use the API to verify the status of your request.|
|              |1002     |Database Error                          |An internal error occurred.|
|              |1003     |Decryption Error                        |An internal error occurred.|
|              |1007     |Gateway Error                           |An internal error occurred.|

These errors are specific to the Alternate Payments API.

|HTTP Status |Code   |Message                            |Description|
|---         |---    |---                                |---|
|401         |20000  |Unsupported API request            |You are not registered to use this API|



# Complex JSON Objects

<a name="apAuthorization"></a>

## authorization

|Element                 |Type                   |Description|
|---                     |---                    |---|
|merchantRefNum          |string<br/>`length=5`  ||
|dupCheck                |string<br/>`length=3`  ||
|amount                  |string<br/>`length=3`  ||
|descriptor              |string<br/>`length=3`  ||
|profile                 |string<br/>`length=3`  ||
|shopperUrl              |string<br/>`length=3`  ||
|paymentMethod           |paymentMethod          ||

```
{
  "lang": "en_US",
  "currency": "EUR"
}
```

## profile


## paymentMethods

### ideal (iDeal)

|Element                 |Type                   |Description|
|---                     |---                    |---|
|bankName                |string<br/>`length=10` ||
|accountCountry          |string<br/>`length=2`  ||

```
"ideal": {
    "bankName": "ING",
    "accountCountry": "NL"
}
```
  
### boleto (Boleto)

### cup (China Union Pay)


# Alternate Payments API

Description TBD

## Payments [/payments]

### Create Payment [POST /accounts/{accountId}/payments]

Your accountId has been setup for a specific payment method.  When initiating an payment for an account
you must pass any additional required parameters for that payment method.

The following payment methods are supported:

|Payment Method  |JSON Object |
|---             |---         |
|iDeal           |ideal       | 
|China Union Pay |cup         | 
|Sofort          |sofort      |

> Please contact Paysafe Merchant Support to enable additional options for your account.

Chang+ Request Create iDeal payment (application/json)

    + Parameters
        + accountId: `1234567891` (string, required) - Your unique account identifer.

    + Attributes (Ideal Payment)
        + paymentType: `ideal` (string, required)
        + Include Payment Request Base

    + Headers
    
            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY
            
+ Response 201 (application/json)

    + Attributes (Ideal Payment)
        + Include Payment Response Base

+ Request Create China Union Pay authorization (application/json)

    + Parameters
        + accountId: `1234567891` (string, required) - Your unique account identifer.

    + Attributes (CUP Payment)
        + Include Payment Request Base

    + Headers
    
            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY
            
+ Response 201 (application/json)

    + Attributes (CUP Payment)
        + Include Payment Response Base

+ Request Sofort authorization (application/json)

+ Response 201 (application/json)

### Lookup Payment by paymentId [GET /accounts/{accountId}/payments/{paymentId}]

Returns an individual payment detail.

+ Request (application/json)

+ Response 200 (application/json)

    + Attributes (CUP Payment)
        + Include Payment Response Base

### Lookup Payment by merchantRefNum [GET /accounts/{accountId}/payments/?merchantRefNum={merchantRefNum}]

As merchantRefNum could be used for multiple payments, a collection of payments is returned.

+ Request (application/json)

+ Response 200 (application/json)

    + Attributes
        + payments (array)
            + (Payment Response Base)


## Refunds [/refunds]

### Create Refund [POST /accounts/{accountId}/payments/{paymentId}/refunds]

+ Request (application/json)

    + Parameters
        + accountId: `1234567891` (string, required) - Your unique account identifer.
        + paymentId: `1111111` (string, required) - The unique identifier for the payment.

    + Attributes (Refund Request)

+ Response 201 (application/json)

    + Attributes (Refund Response)


### Lookup Refund by id [GET /refunds/{id}]

+ Request (application/json)

+ Response 200 (application/json)

    + Attributes (Refund Response)

### Lookup Refund by merchantRefNum [GET /refunds/]

+ Request (application/json)

+ Response 200 (application/json)

    + Attributes
        + refunds (array)
            + (Refund Response)

# Data Structures

## Payment Request Base (object)
+ merchantRefNum: `0b0ceaa3-42ad-442d-b85b-c3b70f24835d` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
+ dupCheck: `true` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
+ amount: `100` (number, required) - This is the amount of the request, in minor units.
+ descriptor: `Test description` (string, optional) - This is the merchant descriptor that will be displayed on the customer's card statement.
+ Include Profile

## Payment Response Base (object)
+ id: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string, required) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., Settlements.
+ liveMode: `false` (string, required)
+ merchantRefNum: `b0ceaa3-42ad-442d-b85b-c3b70f24835d` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.
+ paymentType: `ideal`(string, required)
+ dupCheck: `false` (boolean, optional) - This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
+ amount: `100` (number, required) - This is the amount of the request, in minor units.
+ descriptor: `test descriptor` (string, optional) - This is the merchant descriptor that will be displayed on the customer's card statement.
+ txnTime: `2015-12-11T16:33:49Z` (string, required) - This is the date and time the transaction was processed.
+ currencyCode: `EUR` (string, required) - This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.
+ status: `INITIATED` (string, required) - This is the status of the transaction request.
+ Include Profile
+ returnLinks (array) - This is an array of return links.
   + (object) 
        + rel: default
        + href: ...
+ links (array) - This is an array of self-referencing links. 
   + (object) 
        + rel: self
        + href: ...

## Payment Type (object)
+ paymentType (object) - Payment specific parameters

    + One Of
        + `ideal`
        + `sofort`
        + `cup`

## Ideal Payment (object)
+ ideal (object) - Parameters required for a iDeal payment request.

    + Properties
        + bankName: `ING` (string, required)
        + accountCountry: `NL` (string, required)
        
## CUP Payment (object)
+ cup (object) - Parameters required for a China Union Pay payment request.

    + Properties
        + bankName: `ING` (string, required)
        + accountCountry: `NL` (string, required)     

## Sofort Payment (object)
+ sofort (object) - Parameters required for a Sofort payment request.

    + Properties
        + productId: `3453453` (string, required)
        + key: `ajklj9alksj98gah4l34jg9` (string, required)

## Profile (object)        
+ profile (object, optional) - These are some details about the customer.

    + Properties
        + firstName: `Stan` (string, required)
        + lastName: `Smith` (string, required)
        + email: `stan.smith@fox.com` (string, required)
        + ip: `127.0.0.1` (string, optional)
        
## Refund Request (object)
+ merchantRefNum: `xyz` (string, optional) - The merchant reference number.
+ dupCheck: `false` (boolean, required) - The duplication check flag.
+ amount: `100` (number, required) - This is the amount in minor units.

## Refund Response (object)
+ id: `6565bce8-9ae2-4359-bc7c-48c2e560810b` (string, required) - The refund id.
+ liveMode: `false` (boolean, required)
+ merchantRefNum: `xyz` (string, required)
+ dupCheck: `true` (boolean, required)
+ amount: `400` (number, required)
+ txnTime: `2016-02-24T08:39:39Z` (string, required)
+ status: `COMPLETED` (string, required)
+ Include Gateway Response

## Gateway Response (object)
+ code: `000.100.110` (string, required)
+ description: `Request successfully processed in 'Merchant in Integrator Test Mode'` (string, required)
+ paymentType: `RF` (string, required)